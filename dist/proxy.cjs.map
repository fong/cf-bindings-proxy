{"version":3,"file":"proxy.cjs","sources":["../src/proxy.ts"],"sourcesContent":["import type { FunctionInfo, Functions, ParseType, TransformRule } from './transform';\r\nimport { prepareDataForProxy, transformData, transformFunctionInfo } from './transform';\r\n\r\nexport type BindingResponse =\r\n\t| { success: false; data: string; transform?: never; functions?: never }\r\n\t| {\r\n\t\t\tsuccess: true;\r\n\t\t\tdata: unknown;\r\n\t\t\ttransform?: TransformRule;\r\n\t\t\tfunctions: { [key in Functions]?: FunctionInfo };\r\n\t  };\r\n\r\n/**\r\n * Prepares the binding request to be sent to the proxy.\r\n *\r\n * @param bindingRequest The binding request to prepare.\r\n */\r\nconst prepareBindingRequest = async (bindingRequest: BindingRequest): Promise<BindingRequest> => {\r\n\treturn {\r\n\t\t...bindingRequest,\r\n\t\t__calls: await Promise.all(\r\n\t\t\tbindingRequest.__calls.map(async (call) => ({\r\n\t\t\t\t...call,\r\n\t\t\t\targs: await Promise.all(call.args.map((arg) => prepareDataForProxy(arg.data, arg))),\r\n\t\t\t})),\r\n\t\t),\r\n\t};\r\n};\r\n\r\n/**\r\n * Fetches data from the binding proxy.\r\n *\r\n * @param call The call to make to the proxy.\r\n * @returns The data returned from the proxy.\r\n */\r\nconst fetchData = async (call: BindingRequest): Promise<unknown> => {\r\n\tconst preparedCall = await prepareBindingRequest(call);\r\n\tconst stringifiedCall = JSON.stringify(preparedCall);\r\n\r\n\tlet resp: Response;\r\n\ttry {\r\n\t\tresp = await fetch('http://127.0.0.1:8799', {\r\n\t\t\tbody: stringifiedCall,\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcache: 'no-store',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t});\r\n\t} catch (e) {\r\n\t\tthrow new Error('Unable to connect to binding proxy');\r\n\t}\r\n\r\n\tconst { success, data, transform, functions } = await resp.json<BindingResponse>();\r\n\r\n\tif (!success) {\r\n\t\tthrow new Error(data || 'Bad response from binding proxy');\r\n\t}\r\n\r\n\t// @ts-expect-error - We don't know the type of the data.\r\n\tconst finalData = transform ? transformData(data, transform) : data;\r\n\r\n\tif (functions && finalData && typeof finalData === 'object' && !Array.isArray(finalData)) {\r\n\t\tfor (const [key, fnInfo] of Object.entries(functions)) {\r\n\t\t\tconst transformFn = await transformFunctionInfo(fnInfo, functions);\r\n\r\n\t\t\tif (fnInfo.asAccessor) {\r\n\t\t\t\tconst value =\r\n\t\t\t\t\ttypeof transformFn === 'function' && !(transformFn instanceof Blob)\r\n\t\t\t\t\t\t? await transformFn()\r\n\t\t\t\t\t\t: transformFn;\r\n\r\n\t\t\t\tif (key === 'body') {\r\n\t\t\t\t\tconst body = new ReadableStream({\r\n\t\t\t\t\t\tstart(controller) {\r\n\t\t\t\t\t\t\tcontroller.enqueue(value);\r\n\t\t\t\t\t\t\tcontroller.close();\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tObject.defineProperties(finalData, {\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\tget() {\r\n\t\t\t\t\t\t\t\treturn body;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbodyUsed: {\r\n\t\t\t\t\t\t\tget() {\r\n\t\t\t\t\t\t\t\treturn body.locked;\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty(finalData, key, {\r\n\t\t\t\t\t\tget() {\r\n\t\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// @ts-expect-error - this should be fine\r\n\t\t\t\tfinalData[key] = transformFn;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn finalData;\r\n};\r\n\r\nexport type PropertyCall<Transform extends TransformRule | undefined = TransformRule | undefined> =\r\n\t{\r\n\t\tprop: string;\r\n\t\targs: {\r\n\t\t\tdata:\r\n\t\t\t\t| (Transform extends TransformRule ? ParseType<Transform['from']> : unknown)\r\n\t\t\t\t| BindingRequest[];\r\n\t\t\ttransform?: Transform;\r\n\t\t}[];\r\n\t};\r\n\r\nexport type ProxyType = 'binding' | 'caches';\r\n\r\nexport type BindingRequest = {\r\n\t__original_call?: BindingRequest;\r\n\t__proxyType: ProxyType;\r\n\t__bindingId: string;\r\n\t__calls: PropertyCall[];\r\n\t__chainUntil: string[];\r\n};\r\n\r\n/**\r\n * Creates a proxy object for the response data.\r\n *\r\n * @param bindingId Binding ID.\r\n * @param originalProxy Original proxy object.\r\n * @param data Data to proxy.\r\n * @returns A proxy object.\r\n */\r\nconst createResponseProxy = <T extends object>(\r\n\tproxyType: ProxyType,\r\n\tbindingId: string,\r\n\toriginalProxy: BindingRequest,\r\n\tdata: T,\r\n): T => {\r\n\treturn new Proxy(data, {\r\n\t\tget(_, prop) {\r\n\t\t\tif (!data || ['then', Symbol.iterator, Symbol.toStringTag].includes(prop)) return undefined;\r\n\r\n\t\t\tif (prop in data || ['error', 'results'].includes(prop as string)) {\r\n\t\t\t\treturn data[prop as keyof typeof data];\r\n\t\t\t}\r\n\r\n\t\t\tif (Array.isArray(data) && typeof prop === 'string' && !Number.isNaN(Number(prop))) {\r\n\t\t\t\treturn data[Number(prop)];\r\n\t\t\t}\r\n\r\n\t\t\tif (['toJSON'].includes(prop as string)) return data;\r\n\r\n\t\t\t// special handling for `writeHttpMetadata`\r\n\t\t\tif (prop === 'writeHttpMetadata' && data && typeof data === 'object') {\r\n\t\t\t\t// @ts-expect-error - this is fine\r\n\t\t\t\tconst metadata = (data.httpMetadata || {}) as R2HTTPMetadata;\r\n\t\t\t\treturn (headers: Headers) => {\r\n\t\t\t\t\tif (metadata.cacheControl) headers.set('cache-control', metadata.cacheControl);\r\n\t\t\t\t\tif (metadata.cacheExpiry) headers.set('expires', metadata.cacheExpiry.toUTCString());\r\n\t\t\t\t\tif (metadata.contentDisposition)\r\n\t\t\t\t\t\theaders.set('content-disposition', metadata.contentDisposition);\r\n\t\t\t\t\tif (metadata.contentEncoding) headers.set('content-encoding', metadata.contentEncoding);\r\n\t\t\t\t\tif (metadata.contentLanguage) headers.set('content-language', metadata.contentLanguage);\r\n\t\t\t\t\tif (metadata.contentType) headers.set('content-type', metadata.contentType);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n\t\t\tconst newProxy = createBindingProxy<BindingRequest>(bindingId, {\r\n\t\t\t\tnotChainable: true,\r\n\t\t\t\tproxyType,\r\n\t\t\t});\r\n\r\n\t\t\tnewProxy.__original_call = originalProxy;\r\n\r\n\t\t\treturn async (...args: unknown[]) => {\r\n\t\t\t\tnewProxy.__calls.push({ prop: prop as string, args: args.map((arg) => ({ data: arg })) });\r\n\r\n\t\t\t\treturn fetchData(newProxy);\r\n\t\t\t};\r\n\t\t},\r\n\t});\r\n};\r\n\r\n/**\r\n * Decides whether or not we should chain until a certain point for a property.\r\n *\r\n * @param prop Property to check.\r\n * @returns Whether or not we should chain until certain properties.\r\n */\r\nconst shouldChainUntil = (prop: string): string[] => {\r\n\t// d1 support for chaining the `prepare` method\r\n\tif (['prepare'].includes(prop)) {\r\n\t\treturn ['first', 'run', 'all', 'raw'];\r\n\t}\r\n\r\n\treturn [];\r\n};\r\n\r\nconst buildDefaultBindingRequest = (__proxyType: ProxyType, __bindingId: string) =>\r\n\t({ __proxyType, __bindingId, __calls: [], __chainUntil: [] } as BindingRequest);\r\n\r\ntype CreateBindingOpts = { notChainable?: boolean; proxyType?: ProxyType };\r\n\r\n/**\r\n * Creates a proxy object for the binding.\r\n *\r\n * @param bindingId Binding ID.\r\n * @param notChainable Whether or not the proxy should be chainable.\r\n * @returns A proxy object.\r\n */\r\nexport const createBindingProxy = <T>(\r\n\tbindingId: string,\r\n\t{ notChainable = false, proxyType = 'binding' }: CreateBindingOpts = {},\r\n): T => {\r\n\treturn new Proxy(buildDefaultBindingRequest(proxyType, bindingId), {\r\n\t\tget(target, prop: string) {\r\n\t\t\t// internal properties\r\n\t\t\tif (typeof prop === 'string' && prop.startsWith('__'))\r\n\t\t\t\treturn target[prop as keyof BindingRequest];\r\n\t\t\t// ignore toJSON calls\r\n\t\t\tif (prop === 'toJSON') return undefined;\r\n\t\t\t// if the current proxy is not chainable, ignore calls\r\n\t\t\tif (notChainable) return undefined;\r\n\t\t\t// ignore then calls if there are no calls yet\r\n\t\t\tif (target.__calls.length === 0 && prop === 'then') return undefined;\r\n\r\n\t\t\t// decide if we should chain until a certain point for this call\r\n\t\t\tif (!target.__chainUntil.length) {\r\n\t\t\t\t// eslint-disable-next-line no-param-reassign\r\n\t\t\t\ttarget.__chainUntil = shouldChainUntil(prop);\r\n\t\t\t}\r\n\r\n\t\t\t// if we haven't reached the point where we should stop chaining, return a new proxy\r\n\t\t\tif (target.__chainUntil.length && !target.__chainUntil.includes(prop)) {\r\n\t\t\t\tconst newProxy = createBindingProxy<BindingRequest>(bindingId, { proxyType });\r\n\r\n\t\t\t\tnewProxy.__chainUntil = target.__chainUntil;\r\n\t\t\t\tnewProxy.__calls = target.__calls;\r\n\r\n\t\t\t\treturn (...args: unknown[]) => {\r\n\t\t\t\t\ttarget.__calls.push({ prop, args: args.map((arg) => ({ data: arg })) });\r\n\t\t\t\t\treturn newProxy;\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn async (...args: unknown[]) => {\r\n\t\t\t\ttarget.__calls.push({ prop, args: args.map((arg) => ({ data: arg })) });\r\n\r\n\t\t\t\tconst data = await fetchData(target);\r\n\r\n\t\t\t\tif (\r\n\t\t\t\t\ttypeof data !== 'object' ||\r\n\t\t\t\t\t!data ||\r\n\t\t\t\t\tArray.isArray(data) ||\r\n\t\t\t\t\t[URL, Request, Response].find((t) => data instanceof t)\r\n\t\t\t\t) {\r\n\t\t\t\t\treturn data;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn createResponseProxy(proxyType, bindingId, target, data);\r\n\t\t\t};\r\n\t\t},\r\n\t}) as T;\r\n};\r\n"],"names":["prepareBindingRequest","bindingRequest","call","arg","prepareDataForProxy","fetchData","preparedCall","stringifiedCall","resp","success","data","transform","functions","finalData","transformData","key","fnInfo","transformFn","transformFunctionInfo","value","body","controller","createResponseProxy","proxyType","bindingId","originalProxy","_","prop","metadata","headers","newProxy","createBindingProxy","args","shouldChainUntil","buildDefaultBindingRequest","__proxyType","__bindingId","notChainable","target"],"mappings":"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"}